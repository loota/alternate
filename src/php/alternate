#!/usr/local/bin/php
<?php                         
$pathinfo = pathinfo(__FILE__);
require_once($pathinfo['dirname'] . '/../share/config.php');
class Alternate
{
  private $configurationDirectories = array();
  private $alternationConfigs = array();
  
  private function getNextAlternative($string, $alternationGroup)
  {             
          
    foreach ($alternationGroup as $alternative) {
      if (preg_match('/' . $alternative . '/', $string, $matches)) {
      }
    }
    $keyOfMatch = array_search($string, $alternationGroup);
    $keyOfMatch++;
    $keyOfMatchIsLastInArray = ($keyOfMatch === count($alternationGroup));
    if ($keyOfMatchIsLastInArray) {
      $next = $alternationGroup[0];
    } else {
      $next = $alternationGroup[$keyOfMatch];
    }
    return $next;
  }

  public function getMatchFor($string)
  {
    foreach ($this->alternationConfigs as $alternationDirectories) {
      foreach ($alternationDirectories as $alternationLanguages) {
        foreach ($alternationLanguages as $alternationGroups) {
          foreach ($alternationGroups as $alternationGroupKey => $alternationGroup) {
            #$found = in_array($string, $alternationGroup);
            $found = false;
            // TODO Why doesn't the regex alternationGroup from regex come here?
            foreach ($alternationGroup as $alternative) {
              if (preg_match('/' . $alternative . '/', $string, $matches)) {
                #var_dump('matches', $matches);
                $found = true;
              }
            }
            if ($found) {
              $next = $this->getNextAlternative($string, $alternationGroup);
              return $next;
            }
          }
        }
      }
    }
  }

  public function addConfigurationDirectory($directory)
  {
    array_unshift($this->configurationDirectories, $directory);
  }

  public function addConfiguration($language)
  {
    $this->configurationDirectory = '../share';
    foreach ($this->configurationDirectories as $configurationDirectory) {
      $directoryIterator = new DirectoryIterator($configurationDirectory);
      $alternationGroups = array();
      foreach ($directoryIterator as $file) {
        $filename = $file->getFilename();
        if (!$file->isDot() && preg_match('/^' . $language . '\.conf$/', $filename)) {
          $config = file_get_contents($file->getPathname());
          $configLines = explode("\n", $config);
          foreach ($configLines as $configLine) {
            if ($configLine === '') {
              continue;
            }
            $groupNameValue = explode("=", $configLine);
            $groupName  = $groupNameValue[0];
            $groupValue = explode(",", $groupNameValue[1]);
            $alternationConfigs[$configurationDirectory][$language][$groupName] = $groupValue;
          }
        }
      }
    }
    array_unshift($this->alternationConfigs, $alternationConfigs);
  }
}

$alternate = new Alternate();
$alternate->addConfigurationDirectory(PROJECT_DIR . 'src/share');
$alternate->addConfiguration('php');
$alternate->addConfiguration('english');

if (!$argv) {
  exit;
}
// Do away with the filename
array_shift($argv);

// TODO Handling of command-line options needs mending.
$argString = implode(" ", $argv);
foreach ($argv as $cliArgument) {
  if (strpos($cliArgument, '-') === 0) {
    if (strpos($cliArgument, '=') !== false) {
      $argumentKeyValue = explode('=', $cliArgument);
      $argumentKey = $argumentKeyValue[0];
      $argumentValue = $argumentKeyValue[1];

      if ($argumentKey === '--alternateFile') {
        $configurationType = explode('.', $argumentValue);
        $alternate->addConfiguration($configurationType[0]);
      } else if ($argumentKey === '--alternateDirectory') { 
        $alternate->addConfigurationDirectory($argumentValue);
      }
    }
  } else {
    $inputString = $cliArgument;
  }
}

echo $alternate->getMatchFor($inputString);
